[{"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/index.js":"1","/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/App.js":"2","/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/reportWebVitals.js":"3","/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/Login.jsx":"4","/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/Register.jsx":"5","/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/AccountSetup.jsx":"6"},{"size":535,"mtime":1681639084817,"results":"7","hashOfConfig":"8"},{"size":591,"mtime":1681647230758,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1681639084817,"results":"10","hashOfConfig":"8"},{"size":1207,"mtime":1681639084816,"results":"11","hashOfConfig":"8"},{"size":1481,"mtime":1681639084817,"results":"12","hashOfConfig":"8"},{"size":2250,"mtime":1681639154416,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h4e89j",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/index.js",[],[],"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/App.js",["33","34"],[],"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/reportWebVitals.js",[],[],"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/Login.jsx",[],[],"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/Register.jsx",[],[],"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/AccountSetup.jsx",["35","36"],[],"import React, { useState } from \"react\";\n\nexport const AccountSetup = () => {\n    const [name, setName] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [consumption, setConsumption] = useState(0);\n    const [objective, setObjective] = useState(0);\n    const [sexe, setSexe] = useState(\"\");\n    const [adresse, setAdresse] = useState(\"\");\n    const [pays, setPays] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(consumption, objective, sexe);\n    }\n\n    return (\n        <div className=\"AccountParameters\">\n            <h2>Paramètres du compte</h2>\n            <form className=\"AccountParametersForm\" onSubmit={handleSubmit}>\n                <label for=\"name\">Nom</label>\n                <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Votre nom\" id=\"name\" name=\"name\"/>\n\n                <label for=\"firstName\">Prénom</label>\n                <input value={firstName} onChange={(e) => setFirstName(e.target.value)} type=\"text\" placeholder=\"Votre prénom\" id=\"firstName\" name=\"firstName\"/>\n\n                <label for=\"sexe\">Sexe</label>\n                <select value={sexe} onChange={(e) => setSexe(e.target.value)}>\n                    <option value=\"Homme\">Homme</option>\n                    <option value=\"Femme\">Femme</option>\n                </select>\n\n                <label for=\"adresse\">Adresse</label>\n                <input value={adresse} onChange={(e) => setAdresse(e.target.value)} type=\"text\" placeholder=\"Votre adresse\" id=\"adresse\" name=\"adresse\"/>\n\n                <label for=\"pays\">Pays</label>\n                <input value={pays} onChange={(e) => setPays(e.target.value)} type=\"text\" placeholder=\"Votre pays\" id=\"pays\" name=\"pays\"/>\n\n                {/* <input value={consumption} onChange={(e) => setConsumption(e.target.value)} type=\"number\" id=\"consumption\" name=\"consumption\" min=\"0\" max=\"10000000\"></input>\n\n                <input value={objective} onChange={(e) => setObjective(e.target.value)} type=\"number\" id=\"objective\" name=\"objective\" min=\"0\" max=\"10000000\"></input> */}\n\n                <button className=\"btn-register\" type=\"submit\">Enregistrer</button>\n            </form>\n        </div>\n    )\n}",{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":6,"column":10,"nodeType":"39","messageId":"40","endLine":6,"endColumn":22},{"ruleId":"37","severity":1,"message":"42","line":6,"column":25,"nodeType":"39","messageId":"40","endLine":6,"endColumn":39},{"ruleId":"37","severity":1,"message":"43","line":7,"column":23,"nodeType":"39","messageId":"40","endLine":7,"endColumn":35},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'AccountSetup' is defined but never used.","'setConsumption' is assigned a value but never used.","'setObjective' is assigned a value but never used."]